diff --git a/Source/WebCore/platform/graphics/gstreamer/GStreamerCommon.cpp b/Source/WebCore/platform/graphics/gstreamer/GStreamerCommon.cpp
index abaa20d4..26c68ea9 100644
--- a/Source/WebCore/platform/graphics/gstreamer/GStreamerCommon.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/GStreamerCommon.cpp
@@ -526,7 +526,8 @@ GstBuffer* gstBufferNewWrappedFast(void* data, size_t length)
 GstElement* makeGStreamerElement(const char* factoryName, const char* name)
 {
     auto* element = gst_element_factory_make(factoryName, name);
-    RELEASE_ASSERT_WITH_MESSAGE(element, "GStreamer element %s not found. Please install it", factoryName);
+    if (!element)
+	    WTFLogAlways("GStreamer element %s not found. Please install it", factoryName);
     return element;
 }
 
@@ -534,7 +535,8 @@ GstElement* makeGStreamerBin(const char* description, bool ghostUnlinkedPads)
 {
     GUniqueOutPtr<GError> error;
     auto* bin = gst_parse_bin_from_description(description, ghostUnlinkedPads, &error.outPtr());
-    RELEASE_ASSERT_WITH_MESSAGE(bin, "Unable to create bin for description: \"%s\". Error: %s", description, error->message);
+    if (!bin)
+	    WTFLogAlways("Unable to create bin for description: \"%s\". Error: %s", description, error->message);
     return bin;
 }
 
diff --git a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
index 3237520e..d612c10a 100644
--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
@@ -3402,6 +3402,12 @@ GstElement* MediaPlayerPrivateGStreamer::createVideoSink()
 
     if (!m_player->isVideoPlayer()) {
         m_videoSink = makeGStreamerElement("fakevideosink", nullptr);
+	if (!m_videoSink) {
+		GST_DEBUG_OBJECT(m_pipeline.get(), "Falling back to fakesink for video rendering");
+		m_videoSink = gst_element_factory_make("fakesink", nullptr);
+		g_object_set(m_videoSink.get(), "sync", TRUE, nullptr);
+	}
+	
         return m_videoSink.get();
     }
 
